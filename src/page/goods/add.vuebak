<style scoped>
  @import "../../style/common.css";
</style>
<template>
  <div>
    <div class="card_view">
      <el-tabs v-model="activeName" @tab-click="handleClick">
        <!-- 商品信息  -->
        <el-tab-pane label="商品信息" name="first">
          <el-row>
            <el-col :span="24" :offset="0">
              <el-form :model="goods" :rules="rules" ref="goods" label-width="100px" inline-message=true
                       class="demo-ruleForm">
                <el-form-item label="商品分类：" prop="classify">
                  <classifySelect/>
                </el-form-item>
                <el-form-item label="扩展分类：" prop="extraClassify">
                  <template v-for="(item,index) in items">
                    <classifySelect :is="item.component" :key="item">
                      <el-button size="small" icon="el-icon-delete" class="el-button--samller"
                                 @click="handDeleteClassify(item)">删除
                      </el-button>
                    </classifySelect>
                  </template>
                  <el-button size="small" plain icon="el-icon-plus" class="el-button--samller"
                             @click="handleAddClassify('classifySelect')" style="margin-left:0">添加
                  </el-button>
                </el-form-item>
                <el-form-item label="商品名称：" prop="name">
                  <el-input v-model="goods.name" class="el_inpNub_sp4" placeholder="请输入商品名称"></el-input>
                </el-form-item>
                <el-form-item label="商品促销语：">
                  <el-input v-model="goods.cuxiao" placeholder="请输入促销语,不能超过60个字" class="el_inpNub_sp4"></el-input>
                </el-form-item>

                <el-form-item label="关键词：">
                  <el-input v-model="goods.keyWord" placeholder="商品关键词用于SEO" class="el_inpNub_sp4"></el-input>
                </el-form-item>

                <el-form-item label="商品品牌：">
                  <el-select v-model="goods.brand" filterable placeholder="请选择商品品牌" class="el_inpNub_sp3">
                    <el-option
                      v-for="item in brandOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                </el-form-item>

                <el-form-item label="供货商：">
                  <el-select placeholder="请选择供货商" v-model="goods.support" class="el_inpNub_sp3">
                    <el-option label="供货商一" value="support1"></el-option>
                    <el-option label="供货商二" value="support2"></el-option>
                  </el-select>
                </el-form-item>
                <el-form-item label="市场价：">
                  <el-input-number v-model="goods.marketPrice" controls-position="right" :min="1"
                                   class="el_inpNub_sp2"></el-input-number>
                </el-form-item>
                <el-form-item label="销售价：" prop="salePrice">
                  <el-input-number v-model="goods.salePrice" controls-position="right" :min="1"
                                   class="el_inpNub_sp2"></el-input-number>
                </el-form-item>
                <el-form-item label="成本价：">
                  <el-input-number v-model="goods.costPrice" controls-position="right" :min="1"
                                   class="el_inpNub_sp2"></el-input-number>
                </el-form-item>
                <el-form-item label="基础销量：">
                  <el-input-number v-model="goods.saleCount" controls-position="right" :min="1"
                                   class="el_inpNub_sp1"></el-input-number>
                </el-form-item>
                <el-form-item label="商品编码：">
                  <el-button class="el_inpNub_sp4 border_but" type="text" size="small"
                             @click="goods.showCodeDialog = true">
                    {{goods.goodCode}}
                  </el-button>
                  <el-dialog :visible.sync="goods.showCodeDialog" show-close=false>
                    <el-form-item label="商品名称：">
                      <el-input
                        placeholder="要搜索商品名"
                        clearable>
                      </el-input>
                    </el-form-item>
                    <el-table
                      ref="singleTable" :data="goods_stock" highlight-current-row
                      style="width: 100%">
                      <el-table-column property="goodcode" label="商品编码"></el-table-column>
                      <el-table-column property="goodname" label="商品名称"></el-table-column>
                      <el-table-column property="goodstore" label="库存"></el-table-column>
                    </el-table>
                    <span slot="footer" class="dialog-footer">
                              <el-pagination @size-change="handleSizeChange"
                                             :current-page="page" :page-sizes="[10, 20, 30, 40]" :page-size="100"
                                             layout="total, sizes, prev, pager, next, jumper" :total="400">
                            </el-pagination>
                            </span>
                    <el-button type="primary" @click="goods.showCodeDialog = false"
                               style="display:flex;margin:20px auto 0">
                      确定
                    </el-button>
                  </el-dialog>
                  <el-checkbox v-model="goods.codeChecked">是否同步</el-checkbox>
                </el-form-item>
                <el-form-item label="库存重量：">
                  <div style="padding:5px 0">KG</div>
                </el-form-item>
                <el-form-item label="总库存：" prop="allStock">
                  <el-input-number v-model="goods.allStock" controls-position="right" :min="1"
                                   class="el_inpNub_sp1"></el-input-number>
                </el-form-item>
                <el-form-item label="库存预警：" prop="stockWarning">
                  <el-input-number v-model="goods.stockWarning" controls-position="right" :min="1"
                                   class="el_inpNub_sp1"></el-input-number>
                  <div class="warn_text">设置最低库存预警值。当库存低于预警值时商家中心商品列表页库存列红字提醒。0为不预警。</div>
                </el-form-item>
              </el-form>
            </el-col>
          </el-row>
        </el-tab-pane>
        <!-- 商品类型  -->
        <el-tab-pane label="商品类型" name="second">
          <el-row>
            <el-col :span="24" :offset="0">
              <el-form :model="goods" :rules="rules" ref="goods" label-width="100px" inline-message=true
                       class="demo-ruleForm">
                <el-form-item label="商品类型：">
                  <el-select v-model="goods.type" placeholder="请选择商品类型" class="el_inpNub_sp3">
                    <el-option label="请选择商品类型" value="noType"></el-option>
                    <el-option label="标准属性" value="type1"></el-option>
                    <el-option label="类型2" value="type2"></el-option>
                  </el-select>
                </el-form-item>
                <el-form-item label=" ">
                  <template v-for="(spec,index) in specItems">
                    <addSpecValue
                      :is="spec.component"
                      :key="spec"
                      :specName="spec.specName"
                      :specType="spec.specType"
                      :specID="spec.specID"
                    />
                  </template>
                  <el-button plain size="mini" @click="addSpecDialog=true">添加规格</el-button>
                  <el-dialog title="商品规格" :visible.sync="addSpecDialog">
                    <el-form :model="addSpec">
                      <el-form-item label="规格名称">
                        <el-input v-model="addSpec.specName" placeholder="请输入规格名称"></el-input>
                      </el-form-item>
                      <el-form-item label="规格排序">
                        <el-input v-model="addSpec.specOrder"></el-input>
                      </el-form-item>
                      <el-form-item label="是否启用">
                        <el-switch
                          v-model="addSpec.specOn"
                        >
                        </el-switch>
                      </el-form-item>
                      <el-form-item label="显示方式">
                        <el-radio v-model="addSpec.specType" label="1">文字</el-radio>
                        <el-radio v-model="addSpec.specType" label="2">颜色</el-radio>
                        <el-radio v-model="addSpec.specType" label="3">图片</el-radio>
                      </el-form-item>
                      <el-button type="primary" @click="handleAddSpec" style="display:flex;margin:20px auto 0">确定
                      </el-button>
                    </el-form>
                  </el-dialog>
                </el-form-item>
                <el-form-item label="商品库存：">
                  <goodsStoreTable></goodsStoreTable>
                </el-form-item>
                <el-form-item label="商品属性：">

                </el-form-item>
              </el-form>
            </el-col>
          </el-row>
        </el-tab-pane>
        <!-- 商品详情  -->
        <el-tab-pane label="商品详情" name="third">
          <el-row>
            <el-col :span="24" :offset="0">
              <el-form :model="goods" :rules="rules" ref="goods" label-width="100px" inline-message=true
                       class="demo-ruleForm">
                <el-form-item label="商品类型：" class="editer-container">
                  <quill-editor v-model="content"
                                class="editor"
                                ref="myQuillEditor"
                                :options="editorOption"
                                @blur="onEditorBlur($event)"
                                @focus="onEditorFocus($event)"
                                @ready="onEditorReady($event)">
                  </quill-editor>
                </el-form-item>
              </el-form>
            </el-col>
          </el-row>
        </el-tab-pane>
        <!-- 商品图片  -->
        <el-tab-pane label="商品图片" name="fourth">
          <el-row>
            <el-col :span="24" :offset="0">
              <el-form :model="goods" :rules="rules" ref="goods" label-width="100px" inline-message=true
                       class="demo-ruleForm">
                <el-form-item label="商品图片：" class="uploadImg">
                  <el-upload
                    class="upload-demo"
                    action="https://jsonplaceholder.typicode.com/posts/"
                    :on-preview="handlePreview"
                    :on-remove="handleRemove"
                    :file-list="fileList2"
                    list-type="picture-card">
                    <el-button size="small" type="primary">点击上传</el-button>
                    <div slot="tip" class="el-upload__tip" :style="{lineHeight:20+'px'}">
                      上传商品图片，第一张图片将作为商品主图,支持同时上传多张图片,多张图片之间可随意调整位置；支持jpg、png格式上传或从图片空间中选择，建议使用尺寸800x800像素以上、大小不超过500KB的正方形图片，上传后的图片将会自动保存在图片空间的默认分类中。
                    </div>
                  </el-upload>
                  <el-button type="primary" size="mini">从图片空间选择</el-button>
                </el-form-item>
              </el-form>
            </el-col>
          </el-row>
        </el-tab-pane>
        <!-- 商品物流信息  -->
        <el-tab-pane label="商品物流信息" name="fifth">
          <el-row>
            <el-col :span="24" :offset="0">
              <el-form :model="goods" :rules="rules" ref="goods" label-width="100px" inline-message=true
                       class="demo-ruleForm">
                <el-form-item label="所在地：">
                  <el-cascader
                    placeholder="请选择所在地"
                    :options="options"
                    filterable
                    change-on-select class="el_inpNub_sp3"
                  ></el-cascader>
                </el-form-item>
                <el-form-item label="运费：">
                  <el-radio v-model="goods.mailType" label="freeMail">免邮</el-radio>
                  <el-radio v-model="goods.mailType" label="buyerPay">买家承担运费</el-radio>
                </el-form-item>
                <el-row v-if="goods.mailType == 'buyerPay'">
                  <el-form-item label="计价方式：">
                    <el-radio v-model="goods.priceMode" label="countMode">计件</el-radio>
                    <el-radio v-model="goods.priceMode" label="volMode">体积</el-radio>
                    <el-radio v-model="goods.priceMode" label="weightMode">重量</el-radio>
                  </el-form-item>
                  <el-form-item label="商品重量：">
                    <el-input-number v-model="goods.weight" controls-position="right" :min="1"
                                     class="el_inpNub_sp1"></el-input-number>
                  </el-form-item>
                  <el-form-item label="商品体积：">
                    <el-input-number v-model="goods.volume" controls-position="right" :min="1"
                                     class="el_inpNub_sp1"></el-input-number>
                  </el-form-item>
                  <el-form-item label="物流公司：">
                    <el-select v-model="goods.log" placeholder="请选择物流公司" class="el_inpNub_sp2">
                      <el-option label="物流公司1" value="wuliu1"></el-option>
                    </el-select>
                  </el-form-item>
                </el-row>
                <el-form-item label="库存显示：">
                  <el-radio v-model="goods.stock" label="stockShow">是</el-radio>
                  <el-radio v-model="goods.stock" label="stockHide">否</el-radio>
                </el-form-item>
              </el-form>
            </el-col>
          </el-row>
        </el-tab-pane>
        <!-- 其他信息  -->
        <el-tab-pane label="其他信息" name="sixth">
          <el-row>
            <el-col :span="24" :offset="0">
              <el-form :model="goods" :rules="rules" ref="goods" label-width="100px" inline-message=true
                       class="demo-ruleForm">
                <el-form-item label="商品标签：">
                  <el-select style="width:50%"
                             v-model="typeOptionValue"
                             multiple
                             filterable
                             allow-create
                             default-first-option
                             placeholder="请选择标签">
                    <el-option
                      v-for="item in typeOptions"
                      :key="item.value"
                      :label="item.label"
                      :value="item.value">
                    </el-option>
                  </el-select>
                </el-form-item>
                <el-form-item label="是否上架：" prop="grounding">
                  <el-radio v-model="goods.grounding" label="groundingNow">立刻上架</el-radio>
                  <el-radio v-model="goods.grounding" label="saveToStore">放入仓库</el-radio>
                </el-form-item>
              </el-form>
            </el-col>
          </el-row>
        </el-tab-pane>
      </el-tabs>
    </div>
    <div class="card_view">
      <el-button class="submit_btn" type="primary">提交</el-button>
    </div>
  </div>
</template>

<script>
  import 'quill/dist/quill.core.css'
  import 'quill/dist/quill.snow.css'
  import 'quill/dist/quill.bubble.css'
  import { mapState } from 'vuex'
  import { quillEditor } from 'vue-quill-editor'
  import classifySelect from '@/components/goods/classifySelect'
  import addSpecValue from '@/components/goods/addSpecValue'
  import goodsStoreTable from '@/components/goods/goodsStoreTable'

  export default {
    data () {
      return {
        content: '',
        editorOption: '',
        page: 1,
        goods_stock: [],
        activeName: 'first',
        items: [], //商品扩展分类集
        specItems: [], //规格集
        addSpecDialog: false, //添加规格弹窗
        addSpec: {
          specOn: true, //添加规格启用
          specType: '1', //添加规格值显示方式
          specName: '', //添加规格名称
          specOrder: '' //添加规格排序
        },
        fileList2: [
          {
            name: 'food.jpeg',
            url:
              'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'
          }
        ],
        typeOptions: [
          {
            value: 'BBB',
            label: 'BBB'
          },
          {
            value: '安井',
            label: '安井'
          },
          {
            value: '六合',
            label: '六合'
          }
        ],
        brandOptions: [
          {
            value: '安井',
            label: '安井'
          }],
        typeOptionValue: [],
        options: [
          {
            value: 'zhinan',
            label: '北京',
            children: [
              {
                value: '设计原则',
                label: '设计原则',
                children: [
                  {
                    value: '一致',
                    label: '一致'
                  },
                  {
                    value: 'fankui',
                    label: '反馈'
                  },
                  {
                    value: 'xiaolv',
                    label: '效率'
                  },
                  {
                    value: 'kekong',
                    label: '可控'
                  }
                ]
              },
              {
                value: 'daohang',
                label: '导航',
                children: [
                  {
                    value: 'cexiangdaohang',
                    label: '侧向导航'
                  },
                  {
                    value: 'dingbudaohang',
                    label: '顶部导航'
                  }
                ]
              }
            ]
          },
          {
            value: 'zujian',
            label: '组件',
            children: [
              {
                value: 'basic',
                label: 'Basic',
                children: [
                  {
                    value: 'layout',
                    label: 'Layout 布局'
                  },
                  {
                    value: 'color',
                    label: 'Color 色彩'
                  },
                  {
                    value: 'typography',
                    label: 'Typography 字体'
                  },
                  {
                    value: 'icon',
                    label: 'Icon 图标'
                  },
                  {
                    value: 'button',
                    label: 'Button 按钮'
                  }
                ]
              },
              {
                value: 'form',
                label: 'Form',
                children: [
                  {
                    value: 'radio',
                    label: 'Radio 单选框'
                  },
                  {
                    value: 'checkbox',
                    label: 'Checkbox 多选框'
                  },
                  {
                    value: 'input',
                    label: 'Input 输入框'
                  },
                  {
                    value: 'input-number',
                    label: 'InputNumber 计数器'
                  },
                  {
                    value: 'select',
                    label: 'Select 选择器'
                  },
                  {
                    value: 'cascader',
                    label: 'Cascader 级联选择器'
                  },
                  {
                    value: 'switch',
                    label: 'Switch 开关'
                  },
                  {
                    value: 'slider',
                    label: 'Slider 滑块'
                  },
                  {
                    value: 'time-picker',
                    label: 'TimePicker 时间选择器'
                  },
                  {
                    value: 'date-picker',
                    label: 'DatePicker 日期选择器'
                  },
                  {
                    value: 'datetime-picker',
                    label: 'DateTimePicker 日期时间选择器'
                  },
                  {
                    value: 'upload',
                    label: 'Upload 上传'
                  },
                  {
                    value: 'rate',
                    label: 'Rate 评分'
                  },
                  {
                    value: 'form',
                    label: 'Form 表单'
                  }
                ]
              },
              {
                value: 'data',
                label: 'Data',
                children: [
                  {
                    value: 'table',
                    label: 'Table 表格'
                  },
                  {
                    value: 'tag',
                    label: 'Tag 标签'
                  },
                  {
                    value: 'progress',
                    label: 'Progress 进度条'
                  },
                  {
                    value: 'tree',
                    label: 'Tree 树形控件'
                  },
                  {
                    value: 'pagination',
                    label: 'Pagination 分页'
                  },
                  {
                    value: 'badge',
                    label: 'Badge 标记'
                  }
                ]
              },
              {
                value: 'notice',
                label: 'Notice',
                children: [
                  {
                    value: 'alert',
                    label: 'Alert 警告'
                  },
                  {
                    value: 'loading',
                    label: 'Loading 加载'
                  },
                  {
                    value: 'message',
                    label: 'Message 消息提示'
                  },
                  {
                    value: 'message-box',
                    label: 'MessageBox 弹框'
                  },
                  {
                    value: 'notification',
                    label: 'Notification 通知'
                  }
                ]
              },
              {
                value: 'navigation',
                label: 'Navigation',
                children: [
                  {
                    value: 'menu',
                    label: 'NavMenu 导航菜单'
                  },
                  {
                    value: 'tabs',
                    label: 'Tabs 标签页'
                  },
                  {
                    value: 'breadcrumb',
                    label: 'Breadcrumb 面包屑'
                  },
                  {
                    value: 'dropdown',
                    label: 'Dropdown 下拉菜单'
                  },
                  {
                    value: 'steps',
                    label: 'Steps 步骤条'
                  }
                ]
              },
              {
                value: 'others',
                label: 'Others',
                children: [
                  {
                    value: 'dialog',
                    label: 'Dialog 对话框'
                  },
                  {
                    value: 'tooltip',
                    label: 'Tooltip 文字提示'
                  },
                  {
                    value: 'popover',
                    label: 'Popover 弹出框'
                  },
                  {
                    value: 'card',
                    label: 'Card 卡片'
                  },
                  {
                    value: 'carousel',
                    label: 'Carousel 走马灯'
                  },
                  {
                    value: 'collapse',
                    label: 'Collapse 折叠面板'
                  }
                ]
              }
            ]
          },
          {
            value: 'ziyuan',
            label: '资源',
            children: [
              {
                value: 'axure',
                label: 'Axure Components'
              },
              {
                value: 'sketch',
                label: 'Sketch Templates'
              },
              {
                value: 'jiaohu',
                label: '组件交互文档'
              }
            ]
          }
        ],
        goods: {
          name: '',
          region: '',
          date1: '',
          sale: '',
          date2: '',
          delivery: false,
          type: [],
          resource: '',
          desc: '',
          num8: 0,
          sales: 0,
          left: 0,
          leftWarning: 0,
          dialogFormVisible: false,
          showCodeDialog: false,
          radio: '1',
          codeChecked: false, //商品编码是否同步
          goodCode: '请输入商品编码',
          itemSelected: '请选择',
          mailType: 'freeMail', //邮寄
          stock: 'stockShow', //是否显示库存
          priceMode: 'countMode', //计价方式
          grounding: 'groundingNow' //是否上架
        },
        rules: {
          name: [{required: true, message: '请输入商品名称', trigger: 'blur'}],
          grounding: [
            {required: true, message: '请选择是否上架', trigger: 'blur'}
          ],
          salePrice: [
            {required: true, message: '请输入销售价', trigger: 'blur'}
          ],
          allStock: [
            {required: true, message: '请输入总库存', trigger: 'blur'}
          ],
          stockWarning: [
            {required: true, message: '请输入库存预警', trigger: 'blur'}
          ],
          classify: [
            {required: true, message: '请确定商品分类', trigger: 'blur'}
          ]
        }
      }
    },

    components: {
      quillEditor,
      classifySelect,
      addSpecValue,
      goodsStoreTable
    },
    computed: {
      editor () {
        return this.$refs.myQuillEditor.quill
      },
      ...mapState(['specList'])
    },
    methods: {
      handleSizeChange () {},
      handleClick () {},
      submitForm (formName) {
        this.$refs[formName].validate(valid => {
          if (valid) {
            alert('submit!')
          } else {
            console.log('error submit!!')
            return false
          }
        })
      },
      /** 文本编辑器
       *
       */

      /** 图片上传
       *
       */
      handleRemove (file, fileList) {
        console.log(file, fileList)
      },
      handlePreview (file) {
        console.log(file)
      },

      /**
       * 销毁分类组件
       */
      handDeleteClassify (item) {
        this.items.splice(this.items.indexOf(item), 1)
      },
      /**
       * 添加分类组件
       */
      handleAddClassify (component) {
        this.items.push({
          component: component
        })
      },
      /**
       * 添加规格
       */
      handleAddSpec () {
        this.addSpecDialog = false
        let specItem = {
          component: addSpecValue,
          specID: this.getDuplicateID(1),
          ...this.addSpec
        }
        this.specItems.push(specItem)
        this.$store.commit('addSpec', specItem)
      },

      /**
       * 生成随机ID
       */
      getDuplicateID (randomLength) {
        return Number(
          Math.random()
            .toString()
            .substr(3, randomLength) + Date.now()
        ).toString(36)
      }
    }
  }
</script>

<style scoped>
  .submit_btn {
    margin: 0 50%;
    transform: translateX(-45px);
  }
</style>
